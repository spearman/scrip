#!/bin/bash

HELP="\
scrip <filename> [<filetype>] [flags]
scrip -h, --help
--
    Filetypes
c, cpp (cc), sh
--
    General flags
-f          force overwrite of existing files
-h|--help   help
--
    Specific flags

    c, cpp (cc)
-H          create a header file
-s          create a source file
-m          create a source file with main function and
                no header inclusion if filename==main
-u          create pair of files for a compilation unit
-t          create named struct

    sh
-x          create file with xtrace set
-b          specify a different shell in /bin/ (default bash)
"

create_c_header () {
    #
    # Create a new header with inclusion guards
    #

    if [[ $# != 3 ]] ; then
        echo "error: create_c_header() requires 3 arguments"
        return 1
    fi

    extension=$1
    name=$2
    overwrite=$3
    filename=$2$'.'$1

    name_upper=$(echo $name | tr [:lower:] [:upper:])
    ext_upper=$(echo $extension | tr [:lower:] [:upper:])

    guard=$name_upper$'_'$ext_upper

    if [[ -e $filename ]] && ! $overwrite ; then
        echo "error: header file already exists"
        return 1
    fi

    echo "\
#ifndef $guard
#define $guard

#endif"\
    > $filename

    if [[ !(-e $filename) ]] ; then
        echo "error: file not created"
        return 1
    fi

}

create_c_src () {
    #
    # Create a new source file with corresponding header inclusion
    #

    if [[ $# != 4 ]] ; then
        echo "error: create_c_src() requires 4 arguments"
        return 1
    fi

    extension=$1
    header_ext=$2
    name=$3
    filename=$3$'.'$1
    overwrite=$4

    if [[ -e $filename ]] && ! $overwrite ; then
        echo "error: file already exists"
        return 1
    fi

    echo "\
#include \"$name.$header_ext\""\
    > $filename

    if [[ !(-e $filename) ]] ; then
        echo "error: file not created"
        return 1
    fi

    return
}

create_sh_script () {
    #
    # Create a new .sh file with bash shebang and execute permission.
    #

    if [[ $# != 4 ]] ; then
        echo "error: create_sh_script() requires 4 arguments"
        return 1
    fi

    extension=$1
    shell=$2
    name=$3
    overwrite=$4
    filename=$3$'.'$1

    if [[ -e $filename ]] && ! $overwrite ; then
        echo "error: file already exists"
        return 1
    fi

    echo "\
#!/bin/$shell"\
    > $filename

    if [[ !(-e $filename) ]]
    then
        echo "error: file not created"
        return 1
    fi

    chmod +x $filename
}

#
#   main
#

if [[ $# < 1 ]] ; then
    echo "error: syntax is 'scrip <filename> [<filetype>] [flags]' or 'scrip -h' for help"
    exit 1

fi

case $1 in

-h|--help)
    echo "$HELP"
    exit ;;

*)  ;;

esac

filename=$1
filetype=$2

directory=$(dirname "$filename")
filename=$(basename "$filename")
extension="${filename##*.}"
name="${filename%.*}"
fullpath=$directory$'/'$name$'.'$extension

# no-extension check

if [[ $extension == $filename ]] ; then
    extension=
fi

# boolean flags

header=false
src=false
script=false
overwrite=false
struct=false
xtrace=false
main=false

header_ext=
src_ext=
script_ext=

shell='bash'

# flags

genflags='fh'
cflags='Hmstu'
shflags='xb:'
specflags=

# check extension if filetype not recognized
case $filetype in

c|cc|cpp|sh) ;;

*)
    #filetype not recognized, possibly not provided, check extension
    case $extension in

    c)
        src=true
        filetype='c' ;;

    h)
        header=true
        filetype='c' ;;

    cc)
        src=true
        filetype='cpp' ;;

    cpp)
        src=true
        src_ext='cpp'
        filetype='cpp' ;;

    hh)
        header=true
        filetype='cpp' ;;

    sh)
        script=true
        filetype='sh' ;;

    *)
        echo "error: could not determine filetype"
        exit 1 ;;

    esac ;;

esac


case $filetype in

c)
    header_ext='h'
    src_ext='c'
    specflags=$cflags ;;

cc|cpp)
    header_ext='hh'
    if [[ $src_ext == '' ]] ; then
        src_ext='cc'
    fi
    specflags=$cflags ;;

sh)
    specflags=$shflags
    script=true
    script_ext='sh' ;;

esac

# process flags

while (($OPTIND <= $#)) ; do

    while getopts $genflags$specflags o ; do

        case $o in

        b)
            shell=$OPTARG ;;

        f)
            overwrite=true ;;

        H)
            header=true ;;

        m)
            main=true
            src=true ;;

        s)
            src=true ;;

        t)
            struct=true ;;

        u)
            header=true
            src=true
            unit=true ;;

        x)
            xtrace=true ;;

        h)
            echo "\
ignoring -h: use -H for headers
help syntax: scrip -h, scrip --help" ;;

        esac

    done

    OPTIND=$((OPTIND+1))

done

if ! $header && ! $src && ! $script ; then
    echo "error: no files specified"
    exit 1
fi

if $header ; then
    create_c_header $header_ext $name $overwrite
fi

if $src ; then
    create_c_src $src_ext $header_ext $name $overwrite
fi

if $script ; then
    create_sh_script $script_ext $shell $name $overwrite
    if $xtrace ; then
        echo $'\nset -x' >> $name$'.'$script_ext
    fi
fi

exit
